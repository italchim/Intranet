steps:
  # Step 1: Install npm dependencies using a Node.js builder image
  - name: 'gcr.io/cloud-builders/npm'
    id: 'npm-install'
    args: ['install']

  # Step 2: Access the Gemini API Key from Secret Manager
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'get-api-key'
    entrypoint: 'bash'
    args:
      - '-c'
      - 'gcloud secrets versions access latest --secret=gemini-api-key > /workspace/api_key.txt'

  # Step 3: Replace the placeholder in the source file before building
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'inject-api-key'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Use a different delimiter for sed to avoid issues with special characters in the key
        sed -i "s|%%GEMINI_API_KEY%%|$(cat /workspace/api_key.txt)|g" services/geminiService.ts
    waitFor: ['get-api-key']

  # Step 4: Build the production application. This creates the './dist' directory.
  - name: 'gcr.io/cloud-builders/npm'
    id: 'npm-build'
    args: ['run', 'build']
    waitFor: ['npm-install', 'inject-api-key']

  # Step 5: Deploy the built application files from the 'dist' folder to the bucket
  # The trailing slash on './dist/' is critical to copy the contents, not the directory itself.
  - name: 'gcr.io/cloud-builders/gsutil'
    id: 'deploy-to-bucket'
    args: ['-m', 'rsync', '-d', '-r', './dist/', 'gs://italchimici_intranetportal']
    waitFor: ['npm-build']

  # Step 6: Configure the bucket to serve a static website
  - name: 'gcr.io/cloud-builders/gsutil'
    id: 'configure-website'
    args: ['web', 'set', '-m', 'index.html', '-e', 'index.html', 'gs://italchimici_intranetportal']
    waitFor: ['deploy-to-bucket']

  # Step 7: Make the bucket contents publicly readable for website hosting
  - name: 'gcr.io/cloud-builders/gsutil'
    id: 'set-public-access'
    args: ['iam', 'ch', 'allUsers:objectViewer', 'gs://italchimici_intranetportal']
    waitFor: ['deploy-to-bucket']

options:
  logging: CLOUD_LOGGING_ONLY
